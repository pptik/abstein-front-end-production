{
  "_args": [
    [
      {
        "raw": "vuejs-datepicker",
        "scope": null,
        "escapedName": "vuejs-datepicker",
        "name": "vuejs-datepicker",
        "rawSpec": "",
        "spec": "latest",
        "type": "tag"
      },
      "/Users/Ilham/Library/Mobile Documents/com~apple~CloudDocs/Documents/Vidyanusa/VidyanusaAnalisaAbsensi/FE"
    ]
  ],
  "_from": "vuejs-datepicker@latest",
  "_id": "vuejs-datepicker@1.5.3",
  "_inCache": true,
  "_location": "/vuejs-datepicker",
  "_nodeVersion": "9.5.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/vuejs-datepicker_1.5.3_1534247784421_0.2680250848758907"
  },
  "_npmUser": {
    "name": "charliekassel",
    "email": "ck@charliekassel.com"
  },
  "_npmVersion": "5.6.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "vuejs-datepicker",
    "scope": null,
    "escapedName": "vuejs-datepicker",
    "name": "vuejs-datepicker",
    "rawSpec": "",
    "spec": "latest",
    "type": "tag"
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "http://registry.npmjs.org/vuejs-datepicker/-/vuejs-datepicker-1.5.3.tgz",
  "_shasum": "cf26082526151724ac31a3bb8e89da998e3876df",
  "_shrinkwrap": null,
  "_spec": "vuejs-datepicker",
  "_where": "/Users/Ilham/Library/Mobile Documents/com~apple~CloudDocs/Documents/Vidyanusa/VidyanusaAnalisaAbsensi/FE",
  "author": {
    "name": "Charlie Kassel",
    "email": "ck@charliekassel.com"
  },
  "bugs": {
    "url": "https://github.com/charliekassel/vuejs-datepicker/issues"
  },
  "dependencies": {},
  "description": "A simple Vue.js datepicker component. Supports disabling of dates, inline mode, translations",
  "devDependencies": {
    "@vue/test-utils": "^1.0.0-beta.12",
    "autoprefixer": "^8.3.0",
    "babel-cli": "^6.26.0",
    "babel-core": "^6.22.1",
    "babel-eslint": "^7.1.1",
    "babel-jest": "^22.4.3",
    "babel-plugin-external-helpers": "^6.22.0",
    "babel-plugin-transform-async-to-generator": "^6.24.1",
    "babel-plugin-transform-runtime": "^6.22.0",
    "babel-preset-env": "^1.3.2",
    "babel-preset-stage-2": "^6.22.0",
    "babel-register": "^6.22.0",
    "babel-runtime": "^6.0.0",
    "chalk": "^1.1.3",
    "connect-history-api-fallback": "^1.3.0",
    "coveralls": "^2.13.1",
    "eslint": "^3.19.0",
    "eslint-config-standard": "^6.2.1",
    "eslint-friendly-formatter": "^2.0.7",
    "eslint-plugin-html": "^2.0.0",
    "eslint-plugin-promise": "^3.4.0",
    "eslint-plugin-standard": "^2.0.1",
    "eventsource-polyfill": "^0.9.6",
    "jest": "^22.4.3",
    "jest-serializer-vue": "^1.0.0",
    "lolex": "^1.5.2",
    "opn": "^4.0.2",
    "ora": "^1.2.0",
    "parse5": "^2.1.0",
    "pre-commit": "^1.2.2",
    "rimraf": "^2.6.0",
    "rollup": "^0.57.1",
    "rollup-plugin-buble": "^0.19.2",
    "rollup-plugin-commonjs": "^9.1.0",
    "rollup-plugin-livereload": "^0.6.0",
    "rollup-plugin-node-resolve": "^3.3.0",
    "rollup-plugin-postcss": "^1.6.1",
    "rollup-plugin-replace": "^2.0.0",
    "rollup-plugin-serve": "^0.4.2",
    "rollup-plugin-uglify": "^3.0.0",
    "rollup-plugin-vue": "^2.3.0",
    "semver": "^5.3.0",
    "shelljs": "^0.7.6",
    "stylus": "^0.54.5",
    "vue": "^2.5.16",
    "vue-jest": "^2.2.1",
    "vue-server-renderer": "^2.5.16",
    "vue-template-compiler": "^2.5.16"
  },
  "directories": {},
  "dist": {
    "integrity": "sha512-vCYLx7rbYPEqLLx1EplFQHxkMA/SAFJvwj5PYzeaG98q7hynLZMXsvhE8FPr08PJUiKA+zRknq0CqRioNYLYkg==",
    "shasum": "cf26082526151724ac31a3bb8e89da998e3876df",
    "tarball": "https://registry.npmjs.org/vuejs-datepicker/-/vuejs-datepicker-1.5.3.tgz",
    "fileCount": 109,
    "unpackedSize": 379150,
    "npm-signature": "-----BEGIN PGP SIGNATURE-----\r\nVersion: OpenPGP.js v3.0.4\r\nComment: https://openpgpjs.org\r\n\r\nwsFcBAEBCAAQBQJbcsNpCRA9TVsSAnZWagAALwkQAJDtq3SqH9wOJzVhAgHJ\ngYowHTmtP+h0cEvB11snkn+v8Z9AmI6oOiiImzak0OSjw69eKHZhRqTqsrNn\nBOH8a1nKTq8unFmvm0vtDdHhK7ZVFCMVnR9cT/PI/UjBu0/y9MgrtOErwoTt\njgEedwkho4p5uP5Hk3cmd3/1W1ytAfG5gMvP9InibMdrV9KMECKmEV7R/nlM\nVKc9tnEneeMFES9vw7SXPc212HrPCUY+WWDJa/uluTirjRHrrvL7gM+h7vxd\ne38L/vWPGIB8ypJ2JEwnvnXJTWdBf/t0jcN0/LRD28ztI4kjGwvzkWFDuXa9\n+yd7vT6fRkLlcaCp6gehJa8+p7nLwYz8C0hvmGKYmp21vQzQeToMb3at0eJs\nm/l6JttSNahkUiADYldH4G99DF47oAtCuFQBvJ31ntSe8SQC+V6qwHiU5smS\npINW4gP22HL1lVG0EjVsEiA4T6UlWOTbzG0k72LdYRLtMoWBVgvgr4Nms7K8\niudzj+D/YymYa0du7wqTu/+irKcAB9cLzSg+1Rjd5VWQ8T6Aie1s36yNgOl+\ngiiHWUyOA91Mth/EGAG7WhzrYYLQnZ6/b37Rt5EFgwwIc4hlfd2y8cPtVwpx\n8f7UEX85aMheIkYER7YSRJkPoJIhK+LEDd0eHSYLVmEcs7GVu71L0RPnJgtF\nEHoS\r\n=DVpv\r\n-----END PGP SIGNATURE-----\r\n"
  },
  "files": [
    "src",
    "dist"
  ],
  "gitHead": "03f12b3c523497678b5d80fb71023ec96804718b",
  "homepage": "https://github.com/charliekassel/vuejs-datepicker#readme",
  "keywords": [
    "vue",
    "datepicker",
    "date-picker",
    "calendar"
  ],
  "license": "MIT",
  "main": "dist/vuejs-datepicker.js",
  "maintainers": [
    {
      "name": "charliekassel",
      "email": "ck@charliekassel.com"
    }
  ],
  "module": "dist/vuejs-datepicker.esm.js",
  "name": "vuejs-datepicker",
  "optionalDependencies": {},
  "peerDependencies": {
    "vue": "^2.3.0"
  },
  "pre-commit": [
    "lint",
    "test"
  ],
  "private": false,
  "readme": "# Datepicker\n\n[![Travis Build](https://img.shields.io/travis/charliekassel/vuejs-datepicker.svg)](https://travis-ci.org/charliekassel/vuejs-datepicker)\n[![Version](https://img.shields.io/npm/v/vuejs-datepicker.svg)](https://www.npmjs.com/package/vuejs-datepicker)\n[![Coveralls github](https://img.shields.io/coveralls/github/charliekassel/vuejs-datepicker.svg)](https://coveralls.io/github/charliekassel/vuejs-datepicker?branch=master)\n[![Downloads](https://img.shields.io/npm/dm/vuejs-datepicker.svg)](https://www.npmjs.com/package/vuejs-datepicker)\n\nA datepicker Vue component. Compatible with Vue 2.x\n\n- [Demo](#demo)\n- [Install](#install)\n- [Usage](#usage)\n- [Date Formatting](#date-formatting)\n- [Props](#available-props)\n- [Events](#events)\n- [Disabled dates](#disabled-dates)\n- [Highlighted dates](#highlighted-dates)\n- [Translations](#translations)\n\nNB. Vue 1.x was supported up to version v0.9.9. If you want to use this component with Vue 1.x you can install with `yarn install vuejs-datepicker@0.9.9`\n\n## Demo\n\nTo view a demo online:\nhttps://codesandbox.io/s/mpklq49wp\n\nTo view demo examples locally clone the repo and run `yarn install && yarn serve`\n\n## Install\n\n``` bash\nnpm install vuejs-datepicker --save\n```\nor\n``` bash\nyarn add vuejs-datepicker\n```\n\n``` javascript\nimport Datepicker from 'vuejs-datepicker';\n\nexport default {\n  // ...\n  components: {\n    Datepicker\n  }\n  // ...\n}\n```\n\nOr use directly from a CDN\n``` html\n<div id=\"app\">\n  <vuejs-datepicker></vuejs-datepicker>\n</div>\n<script src=\"https://unpkg.com/vue\"></script>\n<script src=\"https://unpkg.com/vuejs-datepicker\"></script>\n<script>\nconst app = new Vue({\n  el: '#app',\n  components: {\n  \tvuejsDatepicker\n  }\n})\n</script>\n```\n\n## Usage\n\n``` html\n<datepicker></datepicker>\n```\n\n*value* prop if passed should be a Date object\n\n``` html\n<script>\nvar state = {\n  date: new Date(2016, 9,  16)\n}\n</script>\n<datepicker :value=\"state.date\"></datepicker>\n```\nsupport name attribute for normal html form submission\n``` html\n<datepicker :value=\"state.date\" name=\"uniquename\"></datepicker>\n```\nUsing `v-model`\n``` html\n<datepicker v-model=\"state.date\" name=\"uniquename\"></datepicker>\n```\nEmits events\n``` html\n<datepicker @selected=\"doSomethingInParentComponentFunction\" @opened=\"datepickerOpenedFunction\" @closed=\"datepickerClosedFunction\">\n```\nInline always open version\n``` html\n<datepicker :inline=\"true\"></datepicker>\n```\n## Available props\n\n| Prop                          | Type            | Default     | Description                              |\n|-------------------------------|-----------------|-------------|------------------------------------------|\n| value                         | Date\\|String    |             | Date value of the datepicker             |\n| name                          | String          |             | Input name property                      |\n| id                            | String          |             | Input id                                 |\n| format                        | String\\|Function| dd MMM yyyy | Date formatting string or function       |\n| full-month-name               | Boolean         | false       | To show the full month name              |\n| language                      | Object          | en          | Translation for days and months          |\n| disabled-dates                | Object          |             | See below for configuration              |\n| placeholder                   | String          |             | Input placeholder text                   |\n| inline                        | Boolean         |             | To show the datepicker always open       |\n| calendar-class                | String\\|Object  |             | CSS class applied to the calendar el     |\n| input-class                   | String\\|Object  |             | CSS class applied to the input el        |\n| wrapper-class                 | String\\|Object  |             | CSS class applied to the outer div       |\n| monday-first                  | Boolean         | false       | To start the week on Monday              |\n| clear-button                  | Boolean         | false       | Show an icon for clearing the date       |\n| clear-button-icon             | String          |             | Use icon for button (ex: fa fa-times)    |\n| calendar-button               | Boolean         | false       | Show an icon that that can be clicked    |\n| calendar-button-icon          | String          |             | Use icon for button (ex: fa fa-calendar) |\n| calendar-button-icon-content  | String          |             | Use for material-icons (ex: event)       |\n| day-cell-content              | Function        |             | Use to render custom content in day cell |\n| bootstrap-styling             | Boolean         | false       | Output bootstrap v4 styling classes.     |\n| initial-view                  | String          | minimumView | If set, open on that view                |\n| disabled                      | Boolean         | false       | If true, disable Datepicker on screen    |\n| required                      | Boolean         | false       | Sets html required attribute on input    |\n| typeable                      | Boolean         | false       | If true, allow the user to type the date |\n| use-utc                       | Boolean         | false       | use UTC for time calculations            |\n| open-date                     | Date\\|String    |             | If set, open on that date                |\n| minimum-view                  | String          | 'day'       | If set, lower-level views won't show     |\n| maximum-view                  | String          | 'year'      | If set, higher-level views won't show    |\n\n\n## Events\n\nThese events are emitted on actions in the datepicker\n\n| Event             | Output     | Description                          |\n|-------------------|------------|--------------------------------------|\n| opened            |            | The picker is opened                 |\n| closed            |            | The picker is closed                 |\n| selected          | Date\\|null | A date has been selected             |\n| selectedDisabled  | Object     | A disabled date has been selected    |\n| input             | Date\\|null | Input value has been modified        |\n| cleared           |            | Selected date has been cleared       |\n| changedMonth      | Object     | Month page has been changed          |\n| changedYear       | Object     | Year page has been changed           |\n| changedDecade     | Object     | Decade page has been changed         |\n\n\n## Date formatting\n\n#### String formatter\n\nNB. This is not very robust at all - use at your own risk! Needs a better implementation.\n\n| Token | Desc                   | Example     |\n|-------|------------------------|-------------|\n| d     | day                    | 1           |\n| dd    | 0 prefixed day         | 01          |\n| D     | abbr day               | Mon         |\n| su    | date suffix            | st, nd, rd  |\n| M     | month number (1 based) | 1 (for Jan) |\n| MM    | 0 prefixed month       | 01          |\n| MMM   | abbreviated month name | Jan         |\n| MMMM  | month name             | January     |\n| yy    | two digit year         | 16          |\n| yyyy  | four digit year        | 2016        |\n\n#### Function formatter\n\nDelegates date formatting to provided function.\nFunction will be called with date and it has to return formated date as a string.\nThis allow us to use moment, date-fns, globalize or any other library to format date.\n\n``` html\n<script>\n  methods: {\n    customFormatter(date) {\n      return moment(date).format('MMMM Do YYYY, h:mm:ss a');\n    }\n  }\n</script>\n<datepicker :format=\"customFormatter\"></datepicker>\n```\n\n## Disabled Dates\nDates can be disabled in a number of ways.\n\n``` html\n<script>\nvar state = {\n  disabledDates: {\n    to: new Date(2016, 0, 5), // Disable all dates up to specific date\n    from: new Date(2016, 0, 26), // Disable all dates after specific date\n    days: [6, 0], // Disable Saturday's and Sunday's\n    daysOfMonth: [29, 30, 31], // Disable 29th, 30th and 31st of each month\n    dates: [ // Disable an array of dates\n      new Date(2016, 9, 16),\n      new Date(2016, 9, 17),\n      new Date(2016, 9, 18)\n    ],\n    ranges: [{ // Disable dates in given ranges (exclusive).\n      from: new Date(2016, 11, 25),\n      to: new Date(2016, 11, 30)\n    }, {\n      from: new Date(2017, 1, 12),\n      to: new Date(2017, 2, 25)\n    }],\n    // a custom function that returns true if the date is disabled\n    // this can be used for wiring you own logic to disable a date if none\n    // of the above conditions serve your purpose\n    // this function should accept a date and return true if is disabled\n    customPredictor: function(date) {\n      // disables the date if it is a multiple of 5\n      if(date.getDate() % 5 == 0){\n        return true\n      }\n    }\n  }\n}\n</script>\n<datepicker :disabledDates=\"state.disabledDates\"></datepicker>\n```\n\n## Highlighted Dates\nDates can be highlighted (e.g. for marking an appointment) in a number of ways. Important:\nBy default disabled dates are ignored, to highlight disabled dates set the `includeDisabled`\nproperty to `true`. Note: Both `to` and `from` properties are required to define a range of\ndates to highlight.\n\n``` html\n<script>\nvar state = {\n  highlighted: {\n    to: new Date(2016, 0, 5), // Highlight all dates up to specific date\n    from: new Date(2016, 0, 26), // Highlight all dates after specific date\n    days: [6, 0], // Highlight Saturday's and Sunday's\n    daysOfMonth: [15, 20, 31], // Highlight 15th, 20th and 31st of each month\n    dates: [ // Highlight an array of dates\n      new Date(2016, 9, 16),\n      new Date(2016, 9, 17),\n      new Date(2016, 9, 18)\n    ],\n    // a custom function that returns true of the date is highlighted\n    // this can be used for wiring you own logic to highlight a date if none\n    // of the above conditions serve your purpose\n    // this function should accept a date and return true if is highlighted\n    customPredictor: function(date) {\n      // highlights the date if it is a multiple of 4\n      if(date.getDate() % 4 == 0){\n        return true\n      }\n    },\n    includeDisabled: true // Highlight disabled dates\n  }\n}\n</script>\n<datepicker :highlighted=\"state.highlighted\"></datepicker>\n```\n## Slots\n\nSlots will help you customize content.  .\n\n#### beforeCalendarHeader\n\nSometimes you need to show custom content before the calendar header. For such cases you can use the named slot `beforeCalendarHeader`.\n\nAn example would be to use bootstrap's `input-group-prepend` and `input-group-append`\nto show some custom text:\n``` html\n<datepicker :bootstrap-styling=\"true\">\n  <div slot=\"beforeCalendarHeader\" class=\"calender-header\">\n    Choose a Date\n  </div>\n</datepicker>\n```\n\n#### afterDateInput\n\nTo implement some custom styling (for instance to add an animated placeholder) on DateInput, you might need to add elements as DateInput siblings. Slot named\n`afterDateInput` allows you to do that:\n\n``` html\n<datepicker>\n  <span slot=\"afterDateInput\" class=\"animated-placeholder\">\n    Choose a Date\n  </span>\n</datepicker>\n```\n\n\n## Translations\n\nContributing guide - please use appropriate code from this [list](http://www.iana.org/assignments/language-subtag-registry/language-subtag-registry) as the translation property.\n\n- Add your language as a module in the `src/locale/translations` dir.\n- Import and export it in the `src/locale/index` file\n- Add the Language to the available languages in the readme file.\n- Run `npm run lint` to make sure your code formatting is in line with the required code style.\n\n### How to apply language\n\nBelow script tag in component.\n```javascript\nimport {en, es} from 'vuejs-datepicker/dist/locale'\n```\n\nIn component data.\n```javascript\ndata () {\n    return {\n      en: en,\n      es: es\n    }\n}\n```\n\nhtml.\n```javascript\n<datepicker :language=\"es\"></datepicker>\n```\n\nAvailable languages\n\n| Abbr        | Language         |          |\n| ----------- |------------------|----------|\n| af          | Afrikaans        |          |\n| ar          | Arabic           |          |\n| bg          | Bulgarian        |          |\n| bs          | Bosnian          |          |\n| ca          | Catalan          |          |\n| cs          | Czech            |          |\n| da          | Danish           |          |\n| de          | German           |          |\n| ee          | Estonian         |          |\n| el          | Greek            |          |\n| en          | English          | *Default*|\n| es          | Spanish          |          |\n| fa          | Persian (Farsi)  |          |\n| fi          | Finnish          |          |\n| fo          | Faroese          |          |\n| fr          | French           |          |\n| ge          | Georgia          |          |\n| he          | Hebrew           |          |\n| hu          | Hungarian        |          |\n| hr          | Croatian         |          |\n| id          | Indonesian       |          |\n| is          | Icelandic        |          |\n| it          | Italian          |          |\n| ja          | Japanese         |          |\n| ko          | Korean           |          |\n| lb          | Luxembourgish    |          |\n| lt          | Lithuanian       |          |\n| lv          | Latvian          |          |\n| mn          | Mongolian        |          |\n| nbNO        | Norwegian Bokmål |          |\n| nl          | Dutch            |          |\n| pl          | Polish           |          |\n| ptBR        | Portuguese-Brazil|          |\n| ro          | Romanian         |          |\n| ru          | Russian          |          |\n| sk          | Slovak           |          |\n| slSI        | Slovenian        |          |\n| sv          | Swedish          |          |\n| sr          | Serbian (Latin)  |          |\n| srCyrl      | Serbian (Cyrl)   |          |\n| th          | Thai             |          |\n| tr          | Turkish          |          |\n| uk          | Ukrainian        |          |\n| ur          | Urdu             |          |\n| vi          | Vietnamese       |          |\n| zh          | Chinese          |          |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/charliekassel/vuejs-datepicker.git"
  },
  "scripts": {
    "build": "yarn lint && rm -rf dist/* && babel-node scripts/build.js && babel-node scripts/build-locale.js",
    "lint": "eslint --ext .js,.vue src test/unit/specs",
    "prepublishOnly": "yarn build",
    "serve": "rollup -c scripts/serve.js --watch",
    "test": "jest --config test/unit/jest.conf.js --coverage"
  },
  "unpkg": "dist/vuejs-datepicker.min.js",
  "version": "1.5.3"
}
