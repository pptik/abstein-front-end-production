{
  "_args": [
    [
      {
        "raw": "prompt-sui@^3.2.1",
        "scope": null,
        "escapedName": "prompt-sui",
        "name": "prompt-sui",
        "rawSpec": "^3.2.1",
        "spec": ">=3.2.1 <4.0.0",
        "type": "range"
      },
      "/Users/Ilham/Documents/Vidyanusa/VidyanusaEducationalClustering/front-end/node_modules/semantic-ui"
    ]
  ],
  "_from": "prompt-sui@>=3.2.1 <4.0.0",
  "_id": "prompt-sui@3.2.1",
  "_inCache": true,
  "_location": "/prompt-sui",
  "_nodeVersion": "7.10.0",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/prompt-sui-3.2.1.tgz_1502120521205_0.8981247858610004"
  },
  "_npmUser": {
    "name": "semantic-bot",
    "email": "bot@semantic-ui.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "prompt-sui@^3.2.1",
    "scope": null,
    "escapedName": "prompt-sui",
    "name": "prompt-sui",
    "rawSpec": "^3.2.1",
    "spec": ">=3.2.1 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "/semantic-ui"
  ],
  "_resolved": "http://registry.npmjs.org/prompt-sui/-/prompt-sui-3.2.1.tgz",
  "_shasum": "b1973eae57fcd2614b6405c7c7777698a6bbb8bc",
  "_shrinkwrap": null,
  "_spec": "prompt-sui@^3.2.1",
  "_where": "/Users/Ilham/Documents/Vidyanusa/VidyanusaEducationalClustering/front-end/node_modules/semantic-ui",
  "author": {
    "name": "Simon Paitrault",
    "email": "contact@freyskeyd.fr"
  },
  "bugs": {
    "url": "https://github.com/Freyskeyd/gulp-prompt/issues"
  },
  "dependencies": {
    "event-stream": "~3.0.20",
    "inquirer": "3.2.x"
  },
  "description": "Updated fork of gulp-prompt with more recent inquirer.js",
  "devDependencies": {
    "event-stream": "~3.0.20",
    "inquirer": "3.2.x"
  },
  "directories": {
    "test": "test"
  },
  "dist": {
    "integrity": "sha512-dldrpeYMq4c8oGpHoZIzJnCya96eBECHl167PqpPsrnjdo9795gV/hxvJo0RuiKj28cMlhlqZgOYhXHfXtofHQ==",
    "shasum": "b1973eae57fcd2614b6405c7c7777698a6bbb8bc",
    "tarball": "https://registry.npmjs.org/prompt-sui/-/prompt-sui-3.2.1.tgz"
  },
  "gitHead": "de3fa2901b4f924b85c1dd7f1365ce4e9e49975b",
  "homepage": "https://github.com/Freyskeyd/gulp-prompt#readme",
  "keywords": [
    "gulpplugin",
    "prompt"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "semantic-bot",
      "email": "bot@semantic-ui.com"
    }
  ],
  "name": "prompt-sui",
  "optionalDependencies": {},
  "readme": "# Gulp prompt\n\n# THIS REPOSITORY NEED A NEW MAINTAINER\n\nI don't use atom for a while... like 2years and i don't have time to maintain this repository.\nIf someone wants to be involved, just drop me an email.\n\nAdd interaction to gulp tasks.\n\n## .confirm([options])\n\nOptions:\n\n - **message** - Message to be displayed\n - **default** - Default response if none is provided\n\nThis method will allow the pipe to continue if the user input is true, otherwise, it will be terminated.\n\nDefault usage:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.confirm())\n\t.pipe(gulp.dest('dest'));\n\n```\n\nIf a string is provided to the options, it will be set as the message:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.confirm('Are you ready for Gulp?'))\n\t.pipe(gulp.dest('dest'));\n\n```\n\nExample when using options:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.confirm({\n\t\tmessage: 'Continue?',\n\t\tdefault: true\n\t}))\n\t.pipe(gulp.dest('dest'));\n\n```\n\n## .prompt(questions, callback)\n\nThis is a clean pass-through function for gulp to utilize the full [Inquirer.js Library](https://github.com/SBoudrias/Inquirer.js), please refer to them for documentation on corresponding parameters.\n\nPlease note that all types are avaiable, not just the examples below.\n\nExample Input:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.prompt({\n\t\ttype: 'input',\n\t\tname: 'task',\n\t\tmessage: 'Which task would you like to run?'\n\t}, function(res){\n\t\t//value is in res.task (the name option gives the key)\n\t}));\n\n```\n\nExample Checkbox:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.prompt({\n\t\ttype: 'checkbox',\n\t\tname: 'bump',\n\t\tmessage: 'What type of bump would you like to do?',\n\t\tchoices: ['patch', 'minor', 'major']\n\t}, function(res){\n\t\t//value is in res.bump (as an array)\n\t}));\n\n```\n\nExample Password:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.prompt({\n\t\ttype: 'password',\n\t\tname: 'pass',\n\t\tmessage: 'Please enter your password'\n\t}, function(res){\n\t\t//value is in res.pass\n\t}));\n\n```\n\nExample Multiple:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.prompt([{\n\t\ttype: 'input',\n\t\tname: 'first',\n\t\tmessage: 'First question?'\n\t},\n\t{\n\t\ttype: 'input',\n\t\tname: 'second',\n\t\tmessage: 'Second question?'\n\t}], function(res){\n\t\t//value is in res.first and res.second\n\t}));\n\n```\n\nExample Validation:\n```javascript\n\ngulp.src('test.js')\n\t.pipe(prompt.prompt({\n\t\ttype: 'password',\n\t\tname: 'pass',\n\t\tmessage: 'Please enter your password',\n\t\tvalidate: function(pass){\n\n\t\t\tif(pass !== '123456'){\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\t}, function(res){\n\t\t//value is in res.pass\n\t}));\n\n```\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/Freyskeyd/gulp-prompt.git"
  },
  "scripts": {
    "test": "mocha"
  },
  "version": "3.2.1"
}
